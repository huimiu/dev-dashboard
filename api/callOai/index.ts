import "isomorphic-fetch";
import { Context, HttpRequest } from "@azure/functions";
import { ApiKeyProvider, ApiKeyLocation, AxiosInstance, createApiClient } from "@microsoft/teamsfx";

interface Response {
  status: number;
  body: { [key: string]: any };
}

type TeamsfxContext = { [key: string]: any };

/**
 * This function handles requests from teamsfx client.
 * The HTTP request should contain an SSO token queried from Teams in the header.
 * Before trigger this function, teamsfx binding would process the SSO token and generate teamsfx configuration.
 * @param {Context} context - The Azure Functions context object.
 * @param {HttpRequest} req - The HTTP request.
 * @param {teamsfxContext} TeamsfxContext - The context generated by teamsfx binding.
 */
export default async function run(
  context: Context,
  req: HttpRequest,
  teamsfxContext: TeamsfxContext
): Promise<Response> {
  context.log("HTTP trigger function processed a request.");

  // Initialize response.
  let res: Response = {
    status: 200,
    body: {},
  };
  console.log("req:", req);

  // Put an echo into response body.
  res.body.receivedHTTPRequestBody = req.body || "";

  try {
    const completionReq = {
      prompt: `<|im_start|>system\nYou are an AI assistant that helps people find information.\n<|im_end|>\n<|im_start|>user\n${req.body}\n<|im_end|>\n<|im_start|>assistant`,
      max_tokens: 800,
      temperature: 1,
      frequency_penalty: 0,
      presence_penalty: 0,
      top_p: 0.95,
      stop: ["<|im_end|>"],
    };

    const authProvider = new ApiKeyProvider(
      "api-key",
      process.env.TEAMSFX_API_OAI_API_KEY,
      ApiKeyLocation.Header
    );
    const apiClient: AxiosInstance = createApiClient(
      process.env.TEAMSFX_API_OAI_ENDPOINT,
      authProvider
    );
    const resp = await apiClient.post("/completions?api-version=2022-12-01", completionReq);
    if (resp.status !== 200) {
      return {
        status: resp.status,
        body: resp.data,
      };
    }
    
    const response = resp.data.choices[0].text;

    res.body.choice = response;

    return res;
  } catch (e) {
    console.error(e);
    return {
      status: 500,
      body: e,
    };
  }
}
